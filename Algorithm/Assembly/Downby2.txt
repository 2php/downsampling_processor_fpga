CLR									#ARG = i, ART = j, AWG = r, T = c; all zeros at beginning
SET0
	[ZT]							#ZT = 0
$part2			TOG					#First run: (ZT 0 --> 1: MDAR = ART,ARG) 	#Second run: (ZT --> 0: MDAR = ARG,ART)
	$loop		LOAD				#Reads im[i,j]
				INR 	
					[ARG]			#First run: i = i+1							#Second run: j = j+1
				LOAD
				ADD		
					[MDDR]			#AC = AC + MDDR (F:sum = im[i,j] + im[i+1,j])
				INR
					[AC]			#Add one to sum, to prevent floor error when div by 2
				DIV2
				MVAC
					[MDDR]			#Move the result, ready to be written
				STOR				#First run: (ZT 0 --> 1: MDAR = AWT,AWG) 	#Second run: (ZT --> 0: MDAR = AWG,AWT)
				INR
					[WRG]			#r = r+1
			JNRG @loop				#next pixel if i != 0; 
			INR
				[ART]				#j = j+1
			CLAC
			MVAC
				[AWG]				#r = 0
			INR
				[AWT]				#c = c+1
	JNRT @loop						#if !(j == 0): next row; else: all rows finished
	CLR								#all zeros at beginning
JNZT @part2							#First run: (ZT = 1; loop) Second run: (ZT = 0; continue to end)